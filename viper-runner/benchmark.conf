## Viper runner configuration file in HOCON format,
## to be used for benchmarking in our CPSC 513 project
## on inlined predicates.

## Folder that contains the tests. Only .sil files will be considered.
## Alison: .vpr files work as well.
test_folder = "scripts/"

## Print files included in benchmark before benchmark starts.
list_files = true

## Collect the output of programs executed during a benchmark.
print_output = true

## The stdout output is written to 'stdout_file' if the option is set, to stdout 
## otherwise. Analogous for stderr.
## The output files may contain the following placeholders: @date@.
# stdout_file = "results/@date@/output_stdout.txt"
# stderr_file = "results/@date@/output_stderr.txt"

## Number of repetitions for a single test file with the same run configuration.
repetitions = 1

## Timeout in seconds for a single run for one input file.
## 0 or smaller values set the timeout to infinity.
timeout = 180

## Where to save the results of the benchmark.
## Property'results.path' is mandatory and may contain the following 
## placeholders: @date@.
results = {
  path = "results/@date@",
  individual_timings = "timings.csv",
  per_config_timings = "per_config_timings.csv",
  avg_per_config_timings = "avg_per_config_timings.csv"
}

## Declare run configurations, i.e. programs to benchmark.
## Each run configuration must have a 'name' and a 'command' property.
##
## The 'command' denotes the program to benchmark; when executed, the current test
## file is passed as the only argument.
## The 'command' property may contain any of the placeholders described above.
##
## Placeholders in other configuration commands, such as 'pre_round_commands', are
## not yet supported.

cmd_silicon = [
   "scripts/silicon.sh",
   "--mode", "nailgun",
   "--"
   "numberOfParallelVerifiers", "1"
]

 cmd_restart_nailgun = [
   "scripts/ng-server.sh",
   "--restart"
]

cmd_kill_z3_instances = ["pkill", "-e", "-9", "z3"]

cmd_warmup_silicon = ["scripts/warmup-silicon.sh"]

run_configurations = [
  {
    name = "base"
    command = ${cmd_silicon} ["--checkTimeout", "250"],
    pre_round_commands = [
      ${cmd_restart_nailgun},
      ${cmd_warmup_silicon}
    ]
    post_round_commands = [
      ${cmd_kill_z3_instances}
    ]
  }
]
