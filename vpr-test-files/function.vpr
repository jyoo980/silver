field left: Int
field right: Int
field middle: Int

predicate triple(this: Ref) {
  acc(this.left) && acc(this.right) && mid(this)
}

predicate mid(this: Ref) {
  acc(this.middle)
}

function tripleSum(this: Ref): Int
  requires triple(this)
  ensures  unfolding triple(this) in unfolding mid(this) in result == this.left + this.middle + this.right
{
  unfolding triple(this) in unfolding mid(this) in this.left + this.middle + this.right
}
