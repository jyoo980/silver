field x: Bool

predicate P(this: Ref) {
  acc(this.x)
}

method testBefore(this: Ref)
  requires P(this)
{
  var b: Bool
  b := unfolding P(this) in this.x
  if (unfolding P(this) in this.x) {
      assert P(this)
      while (unfolding P(this) in this.x)
        invariant P(this) && unfolding P(this) in this.x
      {
        assert unfolding P(this) in this.x
      }
  }
}
